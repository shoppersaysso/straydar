'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _CloudinaryComponent2 = require('../CloudinaryComponent');

var _CloudinaryComponent3 = _interopRequireDefault(_CloudinaryComponent2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Provides a container for Cloudinary components. Any option set in CloudinaryContext will be passed to the children.
 * @example
 *<CloudinaryContext cloudName="mycloud" dpr="auto">
 *    <!-- other tags -->
 *    <Image publicId={id}/>
 *</CloudinaryContext>
 *
 */
var CloudinaryContext = function (_CloudinaryComponent) {
  _inherits(CloudinaryContext, _CloudinaryComponent);

  function CloudinaryContext(props, context) {
    _classCallCheck(this, CloudinaryContext);

    var _this = _possibleConstructorReturn(this, (CloudinaryContext.__proto__ || Object.getPrototypeOf(CloudinaryContext)).call(this, props, context));

    _this.state = {};
    return _this;
  }

  _createClass(CloudinaryContext, [{
    key: 'getChildContext',
    value: function getChildContext() {
      var _this2 = this;

      var context = {};
      // only pass valid Cloudinary options
      _CloudinaryComponent3.default.VALID_OPTIONS.forEach(function (key) {
        var val = _this2.props[key] || _this2.context[key];
        if (val !== undefined && val !== null) {
          context[key] = val;
        }
      });
      return context;
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        null,
        this.props.children
      );
    }
  }]);

  return CloudinaryContext;
}(_CloudinaryComponent3.default);

CloudinaryContext.propTypes = _CloudinaryComponent3.default.propTypes;
CloudinaryContext.defaultProps = {};
CloudinaryContext.childContextTypes = _CloudinaryComponent3.default.contextTypes;

exports.default = CloudinaryContext;